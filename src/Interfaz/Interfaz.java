/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaz;

import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.RandomAccessFile;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import prueba.Boton;
import prueba.Funciones;

/**
 *
 * @author HP15DA0023LA
 */
public class Interfaz extends javax.swing.JFrame implements ActionListener {

    ArrayList<Boton> lista;
    Funciones Fun;
    RandomAccessFile Biblioteca;
    String rutaBiblioteca;
    /**
     * Creates new form Interfaz
     */
    public Interfaz() {
        initComponents();
        VerificarBiblio();
        Fun= new Funciones();
        lista = new ArrayList();
        
    }
    public void actionPerformed(ActionEvent e)
    {
        Boton temp2= (Boton)e.getSource();
        VentanaInfo ven= new VentanaInfo();
        ven.agregar(temp2);
        ven.toFront();
        ven.setVisible(true);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        BAbrir = new javax.swing.JButton();
        TextoBooleano = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        BotonArtista = new javax.swing.JButton();
        BotonAlbum = new javax.swing.JButton();
        BotonPista = new javax.swing.JButton();
        BtnVaciarPantalla = new javax.swing.JButton();
        AgregarRuta = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        Panel = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(153, 153, 255));

        BAbrir.setText("Abrir archivo");
        BAbrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BAbrirActionPerformed(evt);
            }
        });

        TextoBooleano.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextoBooleanoActionPerformed(evt);
            }
        });

        jLabel1.setText("Â¿Es Mp3?");

        BotonArtista.setText("Artistas");
        BotonArtista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonArtistaActionPerformed(evt);
            }
        });

        BotonAlbum.setText("Album");
        BotonAlbum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonAlbumActionPerformed(evt);
            }
        });

        BotonPista.setText("Pista");
        BotonPista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonPistaActionPerformed(evt);
            }
        });

        BtnVaciarPantalla.setText("Vaciar Pantalla");
        BtnVaciarPantalla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnVaciarPantallaActionPerformed(evt);
            }
        });

        AgregarRuta.setText("Agregar Ruta");
        AgregarRuta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AgregarRutaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(BAbrir)
                    .addComponent(BotonArtista))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(BotonAlbum)
                        .addGap(33, 33, 33)
                        .addComponent(BotonPista)
                        .addGap(31, 31, 31)
                        .addComponent(BtnVaciarPantalla)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(TextoBooleano, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(AgregarRuta)
                        .addGap(20, 20, 20))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BAbrir)
                    .addComponent(TextoBooleano, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(AgregarRuta))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BotonArtista)
                    .addComponent(BotonAlbum)
                    .addComponent(BotonPista)
                    .addComponent(BtnVaciarPantalla))
                .addGap(15, 15, 15))
        );

        jPanel2.setBackground(new java.awt.Color(153, 255, 153));

        javax.swing.GroupLayout PanelLayout = new javax.swing.GroupLayout(Panel);
        Panel.setLayout(PanelLayout);
        PanelLayout.setHorizontalGroup(
            PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        PanelLayout.setVerticalGroup(
            PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 199, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BAbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BAbrirActionPerformed
         JFileChooser selector= new JFileChooser();
        selector.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int opcion= selector.showOpenDialog(this);
        if(opcion==JFileChooser.APPROVE_OPTION)
            {
                File fichero= selector.getSelectedFile();
                getFiles(fichero.getAbsolutePath());
                
            }    
    }//GEN-LAST:event_BAbrirActionPerformed

    private void TextoBooleanoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextoBooleanoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextoBooleanoActionPerformed

    private void BotonArtistaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonArtistaActionPerformed
        VaciarLista();
        LlenarLista();
        MostrarArtista();
    }//GEN-LAST:event_BotonArtistaActionPerformed

    private void BotonAlbumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonAlbumActionPerformed
        VaciarLista();
        LlenarLista();
        MostrarAlbum();
    }//GEN-LAST:event_BotonAlbumActionPerformed

    private void BotonPistaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonPistaActionPerformed
        VaciarLista();
        LlenarLista();
        MostrarPista();
    }//GEN-LAST:event_BotonPistaActionPerformed

    private void BtnVaciarPantallaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnVaciarPantallaActionPerformed
        this.Panel.removeAll();
    }//GEN-LAST:event_BtnVaciarPantallaActionPerformed

    private void AgregarRutaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AgregarRutaActionPerformed
        JFileChooser selector= new JFileChooser();
        selector.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int opcion= selector.showOpenDialog(this);
        if(opcion==JFileChooser.APPROVE_OPTION)
            {
            try {
                File fichero= selector.getSelectedFile();
             
                rutaBiblioteca= fichero.getAbsolutePath()+"\\BibliotecaMusical.musicB";
                RandomAccessFile bibli= new RandomAccessFile(rutaBiblioteca,"rw");
                bibli.close();
                RandomAccessFile revision = new RandomAccessFile("Direccion.path","rw");
                revision.writeByte(1);
                revision.writeBytes(rutaBiblioteca);
                revision.close();
                BotonArtista.setEnabled(true);
                BAbrir.setEnabled(true);
                BotonAlbum.setEnabled(true);
                BotonPista.setEnabled(true);
                BtnVaciarPantalla.setEnabled(true);
                AgregarRuta.setEnabled(false);
            } catch (FileNotFoundException ex) {
                Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
            }
                       
            } 
    }//GEN-LAST:event_AgregarRutaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Interfaz().setVisible(true);
            }
        });
    }
    public void VaciarLista()
    {
        lista=new ArrayList();
        this.Panel.removeAll();
    }
    public void LlenarLista()
    {
        try {
            Biblioteca=new RandomAccessFile(rutaBiblioteca,"rw");
            byte[] lectorT = new byte[4];
            Biblioteca.read(lectorT);
            String identificador= new String(lectorT);
            Boton b = new Boton();
            long tam = Biblioteca.length();
            if(tam!=0)
            {
                while(!"MERC".equals(identificador))
                {
                    if("BEBP".equals(identificador))
                    {
                        lectorT = new byte[4];
                        Biblioteca.read(lectorT);
                        identificador= new String(lectorT);
                    }
                    short tamaÃ±o= Biblioteca.readShort();
                    byte[] info = new byte[tamaÃ±o];
                    Biblioteca.read(info);
                    b.DiferenciadorTags(identificador, info);
                    //
                    lectorT = new byte[4];
                    Biblioteca.read(lectorT);
                    identificador= new String(lectorT);
                    if(("BEBP".equals(identificador))||("MERC".equals(identificador)))
                    {
                        lista.add(b);
                        b= new Boton();
                    }
                }
            }
            Biblioteca.close();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    public void MostrarArtista()
    {
        this.Panel.removeAll();
        this.Panel.setLayout(new java.awt.GridLayout(lista.size(), 1));
        for(int i=0; i<lista.size();i++)
        {
            Boton b= new Boton();
            b= lista.get(i);
            b.addActionListener(this);
            b.setText(b.getArtista());
            b.setVisible(true);
            this.Panel.add(b);
        }
    }
    public void MostrarAlbum()
    {
        this.Panel.removeAll();
        this.Panel.setLayout(new java.awt.GridLayout(lista.size(), 1));
        for(int i=0; i<lista.size();i++)
        {
            Boton bAlbum= new Boton();
            bAlbum= lista.get(i);
            bAlbum.addActionListener(this);
            bAlbum.setText(bAlbum.getAlbum());
            bAlbum.setVisible(true);
            this.Panel.add(bAlbum);
        }
    }
    public void MostrarPista()
    {
        this.Panel.removeAll();
        this.Panel.setLayout(new java.awt.GridLayout(lista.size(), 1));
        for(int i=0; i<lista.size();i++)
        {
            Boton bPista= new Boton();
            bPista= lista.get(i);
            bPista.addActionListener(this);
            bPista.setText(bPista.getPista());
            bPista.setVisible(true);
            this.Panel.add(bPista);
        }
    }
    public void getFiles( String dir_path ) {

            String[] arr_res = null;
           
            File f = new File( dir_path );
            Funciones fun= new Funciones();

            if ( f.isDirectory( )) {

                List<String> res   = new ArrayList<>();
                File[] arr_content = f.listFiles();
                String[] lista= f.list();
                f.getPath();
                int size = lista.length;

                for ( int i = 0; i < size; i ++ ) {
                    
                    String nuevaRuta = dir_path+"\\"+lista[i];
                    File fNuevo = new File(nuevaRuta);
                    if(fNuevo.isDirectory())
                    {
                        getFiles(nuevaRuta);
                    }
                    if(fNuevo.isFile())
                    {
                        if(fun.esMp3(nuevaRuta))
                        {
                            agregarCancion(nuevaRuta);
                        }
                    }
                }

                arr_res = lista;

            } else
                System.err.println( "Â¡ Path NO vÃ¡lido !" );

        }
    
    public void agregarCancion(String ruta)
    {
        try {
            Biblioteca=new RandomAccessFile(rutaBiblioteca,"rw");
            long tamaÃ±oBiblio=Biblioteca.length();
            if(tamaÃ±oBiblio!=0)
            {
                tamaÃ±oBiblio=tamaÃ±oBiblio-4;
            }
            Biblioteca.seek(tamaÃ±oBiblio);
            TextoBooleano.setText("si es");
            Biblioteca.writeBytes("BEBP"); //este es mi separador
            Biblioteca.writeBytes("PATH");
            Biblioteca.writeShort(ruta.length());
            Biblioteca.writeBytes(ruta);
            try {
                        RandomAccessFile archivo= new RandomAccessFile(ruta,"rw");
                        for(int i=1; i<=10;i++)
                        {
                            archivo.readByte();
                        }
                        byte[] tagB = new byte[4];
                        archivo.read(tagB);
                        String tagN=new String(tagB);
                        
                        short posic=Fun.ObtenerTag(tagN);
                        while(posic!=-3)
                        {
                            
                            int tamaÃ±o =  archivo.readInt();
                            for(int i=0; i<2;i++)
                            {
                                archivo.readByte();
                            }
                            byte[] contenido = new byte[tamaÃ±o];
                            archivo.read(contenido);
                            String tCon= new String(contenido);
                            
                            if(posic!=-1)
                            {
                                Biblioteca.writeBytes(tagN); //escribo la cabecera del tag
                                //esto de aquÃ­ es para almacenar los tags en 
                                Biblioteca.writeShort(tCon.length());
                                Biblioteca.writeBytes(tCon);
                                //
//                                TextR.setText(TextR.getText()+Fun.TraducirTag(posic)+": " + tCon+"-"); //esto ya no me sirve
                            }
                            tagB = new byte[4];
                            archivo.read(tagB);
                            tagN=new String(tagB);
                            posic=Fun.ObtenerTag(tagN);
                        }
                        archivo.close();
                    } catch (FileNotFoundException ex) {
                        Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (IOException ex) {
                        Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
                    }
            Biblioteca.writeBytes("MERC"); //esto indica que es el final
            Biblioteca.close();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
        }
            
    }
    private String VerificarBiblio()
    {
        try {
            RandomAccessFile revision = new RandomAccessFile("Direccion.path","rw");
            if(revision.length()==0)
            {
                BotonArtista.setEnabled(false);
                BAbrir.setEnabled(false);
                BotonAlbum.setEnabled(false);
                BotonPista.setEnabled(false);
                BtnVaciarPantalla.setEnabled(false);
            }
            else{
                AgregarRuta.setEnabled(false);
                revision.readByte();
                rutaBiblioteca= revision.readLine();
            }
            revision.close();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        return rutaBiblioteca;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AgregarRuta;
    private javax.swing.JButton BAbrir;
    private javax.swing.JButton BotonAlbum;
    private javax.swing.JButton BotonArtista;
    private javax.swing.JButton BotonPista;
    private javax.swing.JButton BtnVaciarPantalla;
    private javax.swing.JPanel Panel;
    private javax.swing.JTextField TextoBooleano;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    // End of variables declaration//GEN-END:variables
}
