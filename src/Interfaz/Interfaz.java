/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaz;

import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.RandomAccessFile;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import prueba.Funciones;

/**
 *
 * @author HP15DA0023LA
 */
public class Interfaz extends javax.swing.JFrame {

    Funciones Fun;
    RandomAccessFile Biblioteca;
    /**
     * Creates new form Interfaz
     */
    public Interfaz() {
        initComponents();
        Fun= new Funciones();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        BAbrir = new javax.swing.JButton();
        TextR = new javax.swing.JTextField();
        TextoBooleano = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        BAbrir.setText("Abrir archivo");
        BAbrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BAbrirActionPerformed(evt);
            }
        });

        TextR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextRActionPerformed(evt);
            }
        });

        TextoBooleano.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextoBooleanoActionPerformed(evt);
            }
        });

        jLabel1.setText("¿Es Mp3?");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(TextR)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(BAbrir)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(TextoBooleano, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 115, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BAbrir)
                    .addComponent(TextoBooleano, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TextR, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BAbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BAbrirActionPerformed
        try {
            TextR.setText("");
            JFileChooser selector= new JFileChooser();
            int opcion= selector.showOpenDialog(this);
            Biblioteca=new RandomAccessFile("BibliotecaMusical","rw");
            Biblioteca.seek(Biblioteca.length());
            
            if(opcion==JFileChooser.APPROVE_OPTION)
            {
                String nombre_archivo=selector.getSelectedFile().getPath();
                
                String ruta= selector.getSelectedFile().toString();
                boolean siEs= Fun.esMp3(ruta);
                if(siEs==true)
                {
                    TextoBooleano.setText("si es");
                    Biblioteca.writeBytes("BEBP"); //este es mi separador
                    Biblioteca.writeBytes("PATH");
                    Biblioteca.writeShort(ruta.length());
                    Biblioteca.writeBytes(ruta);
                    try {
                        RandomAccessFile archivo= new RandomAccessFile(ruta,"rw");
                        for(int i=1; i<=10;i++)
                        {
                            archivo.readByte();
                        }
                        byte[] tagB = new byte[4];
                        archivo.read(tagB);
                        String tagN=new String(tagB);
                        short posic=Fun.ObtenerTag(tagN);
                        while(posic!=-3)
                        {
                            
                            int tamaño =  archivo.readInt();
                            for(int i=0; i<2;i++)
                            {
                                archivo.readByte();
                            }
                            byte[] contenido = new byte[tamaño];
                            archivo.read(contenido);
                            String tCon= new String(contenido);
                            
                            if(posic!=-1)
                            {
                                Biblioteca.writeBytes(tagN); //escribo la cabecera del tag
                                //esto de aquí es para almacenar los tags en 
                                Biblioteca.writeShort(tCon.length());
                                Biblioteca.writeBytes(tCon);
                                //
//                                TextR.setText(TextR.getText()+Fun.TraducirTag(posic)+": " + tCon+"-"); //esto ya no me sirve
                            }
                            tagB = new byte[4];
                            archivo.read(tagB);
                            tagN=new String(tagB);
                            posic=Fun.ObtenerTag(tagN);
                        }
                        archivo.close();
                    } catch (FileNotFoundException ex) {
                        Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (IOException ex) {
                        Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    Biblioteca.close();
                }
            }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_BAbrirActionPerformed

    private void TextRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextRActionPerformed
        
    }//GEN-LAST:event_TextRActionPerformed

    private void TextoBooleanoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextoBooleanoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextoBooleanoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Interfaz().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BAbrir;
    private javax.swing.JTextField TextR;
    private javax.swing.JTextField TextoBooleano;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
